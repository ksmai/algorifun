const fs = require('fs');
const path = require('path');

const config = require('./gatsby-config');
const links = config.siteMetadata.navigationLinks;

links.forEach((link) => generatePage(link));

function generatePage(link, parentIDs=[]) {
    if (link.id === 'home') {
        return;
    }
    const ids = [...parentIDs, link.id];
    if (link.children) {
        createDirectory('pages', ...ids);
        createDirectory('workers', ...ids);
        link.children.forEach((child) => generatePage(child, ids));
    } else {
        const idPath = ids.join('/');
        const pageFilePath = path.resolve(__dirname, 'src', 'pages', ...parentIDs, `${link.id}.tsx`);
        const workerFilePath = path.resolve(__dirname, 'src', 'workers', ...parentIDs, `${link.id}.worker.js`);
        const className = link.id.replace(/(^|-)\w/g, (letters) => (letters[letters.length - 1].toUpperCase()));
        createPageFile(idPath, pageFilePath, className);
        createWorkerFile(idPath, workerFilePath, className);
    }
}

function createDirectory(...names) {
    const dirPath = path.resolve(__dirname, 'src', ...names);
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`Created directory: ${dirPath}`);
}

function createPageFile(idPath, filePath, className) {
    const source = `/**
  * Automatically generated with \`node ./generate-page.js\`
  * Please do not edit this file directly
  * Last updated: ${new Date().toISOString()}
  */

import React from 'react';

import VisualizationPage from 'components/visualization-page';
import ${className}Worker from 'workers/${idPath}.worker.js';
import ${className}Visualizer from 'visualizers/${idPath}-visualizer';
import config from 'configs/${idPath}-config';

const ${className}Page = () => {
    return (
        <VisualizationPage
            WorkerConstructor={${className}Worker}
            VisualizerConstructor={${className}Visualizer}
            inputs={config.data}
        />
    );
};

export default ${className}Page;
    `;
    fs.writeFileSync(filePath, source, 'utf8');
    console.log(`Generated file: ${filePath}`);
}

function createWorkerFile(idPath, filePath, className) {
    const source = `/**
  * Automatically generated with \`node ./generate-page.js\`
  * Please do not edit this file directly
  * Last updated: ${new Date().toISOString()}
  */

import ${className} from 'algorithms/${idPath}-algorithm';
import config from 'configs/${idPath}-config';

let algorithm;

export async function init(data) {
    algorithm = new ${className}(data, ...config.params);
}

export async function run() {
    return algorithm.run();
}
    `;
    fs.writeFileSync(filePath, source, 'utf8');
    console.log(`Generated file: ${filePath}`);
}
